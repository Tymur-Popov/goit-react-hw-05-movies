{"version":3,"file":"static/js/779.f0ec948f.chunk.js","mappings":"sUAGAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,eAAe,GAGjB,IAAMC,EAAU,kCAEHC,EAAa,mCAAG,uGACpBJ,IAAAA,IAAA,sBAEJK,MAAK,qBAAGC,KAAQC,QACPC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAoBC,EAA3B,EAAcC,YAAd,MAAyC,CACnDH,GAAAA,EACAC,MAAAA,EACAC,OAAQR,EAAUQ,EAHR,GADR,IAOLE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,KAZwB,2CAAH,qDAebC,EAAY,mCAAG,WAAMC,GAAN,0FACnBnB,IAAAA,IAAA,8BACuBmB,IAC3Bd,MAAK,qBAAGC,KAAQC,QACPC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAoBC,EAA3B,EAAcC,YAAd,MAAyC,CACnDH,GAAAA,EACAC,MAAAA,EACAC,OAAQR,EAAUQ,EAHR,GADR,IAOLE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,KAZuB,2CAAH,sDAeZG,EAAoB,SAAAC,GAC/B,OAAOrB,IAAAA,IAAA,iBACUqB,EADV,MAEJhB,MACC,oBACEC,KACEG,EAFJ,EAEIA,GACaE,EAHjB,EAGIC,YACAF,EAJJ,EAIIA,MACcY,EALlB,EAKIC,aACcC,EANlB,EAMIC,aACAC,EAPJ,EAOIA,SACAC,EARJ,EAQIA,OARJ,MAUO,CACLlB,GAAAA,EACAE,OAAQR,EAAUQ,EAClBD,MAAAA,EACAY,YAAa,IAAIM,KAAKN,GAAaO,cACnCL,UAAWM,KAAKC,MAAkB,GAAZP,GACtBE,SAAAA,EACAC,OAAAA,EAjBF,IAoBDd,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEYe,EAAoB,SAAAX,GAC/B,OAAOrB,IAAAA,IAAA,iBACUqB,EADV,cAEJhB,MAAK,qBAAGC,KAAQ2B,KACVzB,KAAI,gBAAGC,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAyBC,EAAtC,EAAwBC,aAAxB,MAAmD,CAC1D5B,GAAAA,EACAyB,KAAAA,EACAC,UAAAA,EACAC,MAAOA,EAAQjC,EAAUiC,EAAQE,EAJ1B,GADL,IAQLzB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEYsB,EAAoB,SAAAlB,GAC/B,OAAOrB,IAAAA,IAAA,iBACUqB,EADV,cAEJhB,MAAK,qBAAGC,KAAQC,QACPC,KAAI,kBAA8B,CACxCC,GADU,EAAGA,GAEb+B,OAFU,EAAOA,OAGjBC,QAHU,EAAeA,QAAf,GADR,IAOL5B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,C,0HCjGYyB,E,QAAmBC,GAAAA,IAAH,sS,SC6B7B,EA1BgB,WACd,IAAQtB,GAAYuB,EAAAA,EAAAA,IAAU,WAAtBvB,QACR,GAA8BwB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAkBlB,GAAShB,KAAK0C,EACjC,GAAE,CAAC1B,KAGF,SAACqB,EAAD,UACGI,EAAQG,OAAS,GAChB,wBACGH,EAAQtC,KAAI,gBAAGC,EAAH,EAAGA,GAAI+B,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGhC,EADE,OAQf,qEAIP,C","sources":["api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './components/images/images.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8fb08ce7c4baf0eda528d5cdd76e2668',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  flex-direction: column;\n  align-items: center;\n`;\n","import { fetchMovieReviews } from '../../api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","console","log","message","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","noPhoto","fetchMovieReviews","author","content","ReviewsContainer","styled","useParams","useState","reviews","setReviews","useEffect","length"],"sourceRoot":""}